@page "/ViewPosts"
@using Domain.Models
@using HttpClients.ClientInterfaces
@inject IPostService postService

<h3>Posts</h3>
<div class="filter-bar">
    <div class="filters-container">
        <button @onclick="@(() => doShowFilters = !doShowFilters)" alt="Funnel">@(doShowFilters ? "Hide Filters" : "Show Filters")</button>
        @if (doShowFilters)
        {
            <div class="filter">
                <label>Username:</label>
                <input type="text" @bind="usernameFilter"/>
            </div>
            <div class="filter">
                <label>Title contains:</label>
                <input type="text" @bind="titleContainsFilter"/>
            </div>
            <div class="filter">
                <label>Content contains:</label>
                <input type="text" @bind="contentContainsFilter"/>
            </div>
        }
    </div>
</div>

<div>
    <button @onclick="LoadPosts">Load</button>
</div>

@if (posts == null)
{
}
else if (!posts.Any())
{
    <p>No Posts to display</p>
}
else
{
    <table class="table">
        <thead>
        <tr>
          
            <th>Username</th>
            <th>Title</th>
     
        </tr>
        </thead>
        <tbody>
        @foreach (var item in posts)
        {
            <tr>
                <td>@item.Owner.UserName</td>
                <td><a href ="/viewSinglePost/@item.Id"> @item.Title</a></td>
            </tr>
        }
        </tbody>
    </table>
}
@if (!string.IsNullOrEmpty(msg))
{
    <label style="color: red">@msg</label>
}

@code {
    private IEnumerable<Post>? posts;
    private string msg = "";

    private bool doShowFilters = false;
    
    private string? usernameFilter;
    private string? contentContainsFilter;
    private string? titleContainsFilter;

    private async Task LoadPosts()
    {
        try
        {
            posts = await postService.GetAsync(usernameFilter, titleContainsFilter, contentContainsFilter);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
}